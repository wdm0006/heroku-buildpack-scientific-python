# Install dependencies with Pip.
puts-cmd "pip install -r requirements.txt"

[ ! "$FRESH_PYTHON" ] && bpwatch start pip_install
[ "$FRESH_PYTHON" ] && bpwatch start pip_install_first

set +e
# first install some libs
VENDORED_GIT_NAME="npscipy-binaries"
VENDORED_GIT_REPO="git://github.com/dbrgn/${VENDORED_GIT_NAME}.git"
# The location of the pre-compiled atlas/lapack/blas/gfortran binaries.
VENDORED_BINARIES="npscipy"

puts-step "Noticed numpy/scipy. Bootstrapping prebuilt binaries."
cd .heroku

## check whether this has happened already
## set BLAS/LAPACK/ATLAS
if [ -d "vendor/lib/atlas-base" ]; then
puts-step "Using cached binaries."
else
puts-step "Creating/downloading binaries."
# Download and extract everything into target vendor directory.
git clone ${VENDORED_GIT_REPO} > /dev/null
tar -xvf ${VENDORED_GIT_NAME}/${VENDORED_BINARIES}.tar.gz > /dev/null
fi
export BLAS=$(pwd)/vendor/lib/atlas-base/atlas/libblas.a
export LAPACK=$(pwd)/vendor/lib/atlas-base/atlas/liblapack.a
export ATLAS=$(pwd)/vendor/lib/atlas-base/libatlas.a
export LIBRARY_PATH=$(pwd)/vendor/lib:$(pwd)/vendor/lib/atlas-base:$(pwd)/vendor/lib/atlas-base/atlas
export LD_LIBRARY_PATH=$(pwd)/vendor/lib:$(pwd)/vendor/lib/atlas-base:$(pwd)/vendor/lib/atlas-base/atlas

# then manually install some libs
/app/.heroku/python/bin/pip install -U --no-use-wheel numpy==1.9.2
/app/.heroku/python/bin/pip install -U --no-use-wheel scipy==0.15.1
/app/.heroku/python/bin/pip install -U --no-use-wheel pandas==0.16.0
/app/.heroku/python/bin/pip install -U --no-use-wheel sklearn==0.17.0
/app/.heroku/python/bin/pip install -U --no-use-wheel statsmodels==0.6.0
/app/.heroku/python/bin/pip install -U --no-use-wheel patsy>=0.4.0

# then install whatever else is left
/app/.heroku/python/bin/pip install -r requirements.txt --exists-action=w --src=./.heroku/src --disable-pip-version-check --no-cache-dir 2>&1 | tee $WARNINGS_LOG | cleanup | indent
PIP_STATUS="${PIPESTATUS[0]}"
set -e

show-warnings

if [[ ! $PIP_STATUS -eq 0 ]]; then
    exit 1
fi


# Smart Requirements handling
cp requirements.txt .heroku/python/requirements-declared.txt
/app/.heroku/python/bin/pip freeze --disable-pip-version-check > .heroku/python/requirements-installed.txt

[ ! "$FRESH_PYTHON" ] && bpwatch stop pip_install
[ "$FRESH_PYTHON" ] && bpwatch stop pip_install_first

echo
